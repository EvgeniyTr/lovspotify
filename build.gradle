
plugins {
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'signing'
    id 'maven-publish'
}

group = 'me.haga.librespot.spotifi'
description = 'Spotify Client + RestAPI + Spotify GUI'
version = '1.6.3'

sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'xyz.gianlu.librespot:librespot-player:1.6.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'
    implementation 'com.google.protobuf:protobuf-java-util:3.23.4'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
}

jar.archiveFileName = "lovspotify.jar"


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {

}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            customizePom(pom)

            artifact sourcesJar

            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
                pomFile.delete()
            }

            // sign the artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc|jre9)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }

        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username 'thaga'
                    password 'Domi0306!!!!!!'
                }
        }
    }
}

model {
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn(project.tasks.signArchives)
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn(project.tasks.signArchives)
    }
    tasks.publish {
        dependsOn(project.tasks.build)
    }
    tasks.install {
        dependsOn(project.tasks.build)
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            name 'Lovspotify'
            packaging 'jar'
            // optionally artifactId can be defined here
            description 'Spotify Client + RestAPI + Spotify GUI written in Java '
            url 'https://github.com/spocon/lovspotify'

            licenses {
                license {
                    name 'The Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            scm {
                connection 'scm:git:git://github.com/spocon/lovspotify.git'
                developerConnection 'scm:git:ssh://github.com:spocon/lovspotify.git'
                url 'https://github.com/spocon/lovspotify'
            }
            developers {
                developer {
                    organization 'Lovspotify Developers'
                    organizationUrl 'https://github.com/spocon/lovspotify/graphs/contributors'
                }
            }
        }
    }
}

